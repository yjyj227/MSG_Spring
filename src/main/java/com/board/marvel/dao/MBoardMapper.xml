<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="MBoardDTO">

<!-- 댓글 수 구하기 -->
<select id="selectCommentCount_M" parameterType="map" resultType="MBoardDTO">
	select * from m_comment where m_number=#{m_number} and m_cbody!='삭제된 댓글입니다.'
</select>


<!-- 1-1. 글목록 보기 -->
<select id="selectList_M" parameterType="map" resultType="MBoardDTO">
	select * 
		from (select m_table.*, rownum rn
			from (select * from m_table 
				<where>
					<if test="searchtext!=null and search=='m_title'">
						m_title like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_body'">
						m_body like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_nickname'">
						m_nickname like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_all'">
						m_title like '%' || #{searchtext} || '%' or
						m_body like '%' || #{searchtext} || '%' or
						m_nickname like '%' || #{searchtext} || '%'
					</if>
				</where>
			order by m_number desc) m_table)
			
	<![CDATA[
	where rn >=#{start} AND rn <=#{end}
	]]>
</select>

<!-- 1-2. 글목록 보기 -->
<select id="selectListMref_M" parameterType="map" resultType="MBoardDTO">
	select * 
		from (select m_table.*, rownum rn
			from (select * from m_table 
				<where>
					<if test="searchtext!=null and search=='m_title'">
						m_title like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_body'">
						m_body like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_nickname'">
						m_nickname like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_all'">
						m_title like '%' || #{searchtext} || '%' or
						m_body like '%' || #{searchtext} || '%' or
						m_nickname like '%' || #{searchtext} || '%'
					</if>
				</where>
			 order by m_number desc) m_table where m_ref=#{m_ref})
			
	<![CDATA[
	where rn >=#{start} AND rn <=#{end}
	]]>
</select>

<!-- 1-3. 글목록 보기 -->
<select id="selectListHot_M" parameterType="map" resultType="MBoardDTO">
	select * 
		from (select m_table.*, rownum rn
			from (select * from m_table 
				<where>
					<if test="searchtext!=null and search=='m_title'">
						m_title like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_body'">
						m_body like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_nickname'">
						m_nickname like '%' || #{searchtext} || '%'
					</if>
					<if test="searchtext!=null and search=='m_all'">
						m_title like '%' || #{searchtext} || '%' or
						m_body like '%' || #{searchtext} || '%' or
						m_nickname like '%' || #{searchtext} || '%'
					</if>
				</where>
			order by m_number desc) m_table where m_count > 50)
			
	<![CDATA[
	where rn >=#{start} AND rn <=#{end}
	]]>
</select>

<!-- 2-1. 검색어에 해당하는 총 레코드 수 구하기 -->
<select id="selectCount_M" parameterType="map" resultType="Integer">
	select count(*) from m_table
		<where>
			<if test="searchtext!=null and search=='m_title'">
				m_title like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='m_body'">
				m_body like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='m_nickname'">
				m_nickname like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='all'">
				m_title like '%' || #{searchtext} || '%' or
				m_body like '%' || #{searchtext} || '%' or
				m_nickname like '%' || #{searchtext} || '%'
			</if>
		</where>
</select>

<!-- 2-2. 검색어에 해당하는 총 레코드 수 구하기 m_ref -->
<select id="selectCountMref_M" parameterType="map" resultType="Integer">
	select count(*) from m_table 
		<where>
			<if test="searchtext!=null and search=='m_title'">
				m_title like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='m_body'">
				m_body like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='m_nickname'">
				m_nickname like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='all'">
				m_title like '%' || #{searchtext} || '%' or
				m_body like '%' || #{searchtext} || '%' or
				m_nickname like '%' || #{searchtext} || '%'
			</if>
			and m_ref=#{m_ref} 
		</where>
</select>

<!-- 2-3. 검색어에 해당하는 총 레코드 수 구하기 hot -->
<select id="selectCountHot_M" parameterType="map" resultType="Integer">
	select count(*) from m_table 
		<where>
			<if test="searchtext!=null and search=='m_title'">
				m_title like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='m_body'">
				m_body like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='m_nickname'">
				m_nickname like '%' || #{searchtext} || '%'
			</if>
			<if test="searchtext!=null and search=='all'">
				m_title like '%' || #{searchtext} || '%' or
				m_body like '%' || #{searchtext} || '%' or
				m_nickname like '%' || #{searchtext} || '%'
			</if>
			 and m_count > 50
		</where>
</select>




<!-- 최댓값 구하기 -->
<select id="getNewNum_M" resultType="int">
	select max(m_number) from m_table
</select>

<!-- 글쓰기 -->
<insert id="insertBoard_M" parameterType="MBoardDTO">
	insert into m_table(m_number, mem_id, m_nickname, m_title, m_body, m_date, m_category, m_ref, m_filename)
	values(#{m_number}, #{mem_id}, #{m_nickname}, #{m_title}, #{m_body}, sysdate, #{m_category}, #{m_ref}, #{m_filename,jdbcType=VARCHAR})
</insert>

<!-- 글쓰기 성공시 포인트 적립 -->
<update id="pointupA_M" parameterType="String">
	update login set log_point=log_point+10 where mem_id=#{mem_id}
</update>


<select id="getPoint_M" parameterType="String" resultType="int">
	select log_point from login where mem_id=#{mem_id}
</select>
<select id="getGrade_M" parameterType="String" resultType="int">
	select log_grade from login where mem_id=#{mem_id}
</select>


<!-- 등급 변동 -->
<update id="changeGrade1_M" parameterType="String">
	update login set log_grade=1 where mem_id=#{mem_id}
</update>
<update id="changeGrade2_M" parameterType="String">
	update login set log_grade=2 where mem_id=#{mem_id}
</update>
<update id="changeGrade3_M" parameterType="String">
	update login set log_grade=3 where mem_id=#{mem_id}
</update>
<update id="changeGrade4_M" parameterType="String">
	update login set log_grade=4 where mem_id=#{mem_id}
</update>
<update id="changeGrade5_M" parameterType="String">
	update login set log_grade=5 where mem_id=#{mem_id}
</update>

<!-- 4. 조회수 증가 -->
<update id="updateHit_M" parameterType="Integer">
	update m_table set m_count=m_count+1 where m_number=#{m_number}
</update>

<!-- 5. 글 상세보기 -->
<select id="selectBoard_M" parameterType="Integer" resultType="MBoardDTO">
	select * from m_table where m_number=#{m_number}
</select>

<!-- 6. 글 수정하기 -->
<update id="updateBoard_M" parameterType="MBoardDTO">
	update m_table set m_title=#{m_title}, m_body=#{m_body}, 
	m_category=#{m_category}, m_ref=#{m_ref}, m_filename=#{m_filename:VARCHAR} where m_number=#{m_number}
</update>

<!-- 7. 글 삭제하기 -->
<delete id="deleteBoard_M" parameterType="Integer">
	delete from m_table where m_number=#{m_number}
</delete>

<!-- 글 삭제시 포인트 회수 -->
<update id="pointdownA_M" parameterType="String">
	update login set log_point=log_point-10 where mem_id=#{mem_id}
</update>

<!-- 글 삭제시 해당 글의 댓글 삭제 -->
<delete id="deleteBoardComment_M" parameterType="Integer">
	delete from m_comment where m_number=#{m_number}
</delete>

<!-- 글 삭제시 스크랩 삭제 -->
<delete id="deleteBoardScrap_M" parameterType="MBoardDTO">
	delete from scrap where s_number=#{m_number} and s_title=#{m_title}
</delete>



</mapper>